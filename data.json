[
    {
        "question_en": "Inside which HTML element do we put the JavaScript?",
        "question_ja": "JavaScriptはどのHTML要素内に記述しますか？",
        "choices": [
            "&lt;scripting&gt;",
            "&lt;js&gt;",
            "&lt;script&gt;",
            "&lt;javascript&gt;"
        ],
        "answer": "&lt;script&gt;"
    },
    {
        "question_en": "What is the correct JavaScript syntax to change the content of the HTML element below?",
        "question_ja": "HTML要素の内容を変更する正しいJavaScript構文は？",
        "choices": [
            "#demo.innerHTML = \"Hello World!\";",
            "document.getElementById(\"demo\").innerHTML = \"Hello World!\";",
            "document.getElementByName(\"p\").innerHTML = \"Hello World!\";",
            "document.getElement(\"p\").innerHTML = \"Hello World!\";"
        ],
        "answer": "document.getElementById(\"demo\").innerHTML = \"Hello World!\";",
        "explanation": ""
    },
    {
        "question_en": "How do you write 'Hello World' in an alert box?",
        "question_ja": "アラートボックスに「Hello World」と表示するには？",
        "choices": [
            "alertBox(\"Hello World\");",
            "msg(\"Hello World\");",
            "alert(\"Hello World\");",
            "msgBox(\"Hello World\");"
        ],
        "answer": "alert(\"Hello World\");",
        "explanation": "The alert() method displays an alert box with a specified message and an OK button."
    },
    {
        "question_en": "How do you create a function in JavaScript?",
        "question_ja": "JavaScriptで関数を作成するには？",
        "choices": [
            "function = myFunction()",
            "function myFunction()",
            "function:myFunction()",
            "create myFunction()"
        ],
        "answer": "function myFunction()",
        "explanation": "JavaScript functions are defined with the function keyword, followed by a name and parentheses ()."
    },
    {
        "question_en": "How to write an IF statement in JavaScript?",
        "question_ja": "JavaScriptでIF文を書くには？",
        "choices": [
            "if i = 5 then",
            "if i == 5 then",
            "if (i == 5)",
            "if i = 5"
        ],
        "answer": "if (i == 5)",
        "explanation": "The if statement evaluates a condition in parentheses and executes a block of code if the condition is true."
    },
    {
        "question_en": "How do you add a comment in JavaScript?",
        "question_ja": "JavaScriptでコメントを追加するには？",
        "choices": [
            "&lt;!--This is a comment--&gt;",
            "//This is a comment",
            "'This is a comment",
            "#This is a comment"
        ],
        "answer": "//This is a comment",
        "explanation": "Single line comments in JavaScript start with // and multiline comments start with /* and end with */."
    },
    {
        "question_en": "What is the correct way to write a JavaScript array?",
        "question_ja": "JavaScriptの配列を正しく書くには？",
        "choices": [
            "var colors = (1:\"red\", 2:\"green\", 3:\"blue\")",
            "var colors = [\"red\", \"green\", \"blue\"]",
            "var colors = 1 = (\"red\"), 2 = (\"green\"), 3 = (\"blue\")",
            "var colors = \"red\", \"green\", \"blue\""
        ],
        "answer": "var colors = [\"red\", \"green\", \"blue\"]",
        "explanation": "JavaScript arrays are written with square brackets, and array items are separated by commas."
    },
    {
        "question_en": "How do you round the number 7.25 to the nearest integer?",
        "question_ja": "数値7.25を最も近い整数に丸めるには？",
        "choices": [
            "Math.round(7.25)",
            "round(7.25)",
            "Math.rnd(7.25)",
            "rnd(7.25)"
        ],
        "answer": "Math.round(7.25)",
        "explanation": "The Math.round() function returns the value of a number rounded to the nearest integer."
    },
    {
        "question_en": "How do you declare a JavaScript variable?",
        "question_ja": "JavaScriptで変数を宣言するには？",
        "choices": [
            "var carName;",
            "variable carName;",
            "v carName;",
            "declare carName;"
        ],
        "answer": "var carName;",
        "explanation": "In JavaScript, variables can be declared using var, let, or const keyword."
    },
    {
        "question_en": "Which event occurs when the user clicks on an HTML element?",
        "question_ja": "ユーザーがHTML要素をクリックした時に発生するイベントは？",
        "choices": [
            "onmouseover",
            "onchange",
            "onclick",
            "onmouseclick"
        ],
        "answer": "onclick",
        "explanation": "The onclick event occurs when the user clicks on an element."
    },
    {
        "question_en": "How do you find the number with the highest value of x and y?",
        "question_ja": "xとyのうち最大値を求めるには？",
        "choices": [
            "Math.max(x, y)",
            "top(x, y)",
            "Math.ceil(x, y)",
            "ceil(x, y)"
        ],
        "answer": "Math.max(x, y)",
        "explanation": "The Math.max() method returns the number with the highest value."
    },
    {
        "question_en": "JavaScript is the same as Java.",
        "question_ja": "JavaScriptはJavaと同じである。",
        "choices": [
            "True",
            "False",
            "Depends on browser",
            "Depends on version"
        ],
        "answer": "False",
        "explanation": "JavaScript and Java are completely different programming languages."
    },
    {
        "question_en": "How do you call a function named 'myFunction'?",
        "question_ja": "'myFunction'という名前の関数を呼び出すには？",
        "choices": [
            "call myFunction()",
            "call function myFunction()",
            "myFunction()",
            "execute myFunction()"
        ],
        "answer": "myFunction()",
        "explanation": "You call a function by writing the function name followed by parentheses."
    },
    {
        "question_en": "How to write an 'if...else' conditional in JavaScript?",
        "question_ja": "JavaScriptで'if...else'条件文を書くには？",
        "choices": [
            "if (i == 5) else i = 0;",
            "if i = 5 then else i = 0;",
            "if i == 5 else i = 0;",
            "if (i == 5) { } else { i = 0; }"
        ],
        "answer": "if (i == 5) { } else { i = 0; }",
        "explanation": "The if...else statement executes a statement if a condition is true and a different statement if the condition is false."
    },
    {
        "question_en": "How do you get the value of pi in JavaScript?",
        "question_ja": "JavaScriptでπ（円周率）の値を取得するには？",
        "choices": [
            "Math.PI",
            "PI",
            "Math.pi",
            "pi"
        ],
        "answer": "Math.PI",
        "explanation": "Math.PI returns the value of pi (3.141592653589793)."
    },
    {
        "question_en": "How do you create a new Date object in JavaScript?",
        "question_ja": "JavaScriptで新しいDateオブジェクトを作成するには？",
        "choices": [
            "new Date()",
            "Date()",
            "makeDate()",
            "create.Date()"
        ],
        "answer": "new Date()",
        "explanation": "The Date object is created with the new Date() constructor."
    },
    {
        "question_en": "Which operator is used to concatenate strings in JavaScript?",
        "question_ja": "JavaScriptで文字列を連結する演算子は？",
        "choices": [
            ".",
            "+",
            "&",
            "append"
        ],
        "answer": "+",
        "explanation": "The + operator is used to concatenate (join) two or more strings."
    },
    {
        "question_en": "How do you convert a string to an integer in JavaScript?",
        "question_ja": "JavaScriptで文字列を整数に変換するには？",
        "choices": [
            "int('123')",
            "Integer.parse('123')",
            "parseInt('123')",
            "parseInteger('123')"
        ],
        "answer": "parseInt('123')",
        "explanation": "The parseInt() function parses a string and returns an integer."
    },
    {
        "question_en": "What will the following code return: Boolean(10 > 9)?",
        "question_ja": "次のコードは何を返しますか：Boolean(10 > 9)?",
        "choices": [
            "true",
            "false",
            "NaN",
            "undefined"
        ],
        "answer": "true",
        "explanation": "The Boolean() function returns true for expressions that evaluate to true."
    },
    {
        "question_en": "How do you check if a variable is an array in JavaScript?",
        "question_ja": "JavaScriptで変数が配列かどうかを確認するには？",
        "choices": [
            "isArray(x)",
            "Array.isArray(x)",
            "x.isArray()",
            "x instanceof Array"
        ],
        "answer": "Array.isArray(x)",
        "explanation": "The Array.isArray() method returns true if an object is an array, otherwise false."
    },
    {
        "question_en": "What is the correct operator to check both value and type equality?",
        "question_ja": "値と型の両方が等しいかを確認する正しい演算子は？",
        "choices": [
            "x == y",
            "x === y",
            "x = y",
            "x.equals(y)"
        ],
        "answer": "x === y",
        "explanation": "The '===' (strict equality) operator checks for both value and type equality, while '==' (loose equality) only checks values."
    },
    {
        "question_en": "What is the correct syntax for the spread operator?",
        "question_ja": "スプレッド演算子の正しい構文は？",
        "choices": [
            "let newArr = [*oldArr];",
            "let newArr = [...oldArr];",
            "let newArr = [&oldArr];",
            "let newArr = [+oldArr];"
        ],
        "answer": "let newArr = [...oldArr];",
        "explanation": "The spread (...) operator allows an iterable (like an array) to be expanded in places where zero or more arguments/elements are expected."
    },
    {
        "question_en": "What is the correct syntax to check if a property exists in an object?",
        "question_ja": "オブジェクト内にプロパティが存在するかを確認する正しい構文は？",
        "choices": [
            "if (prop in obj) { }",
            "if (obj.hasProp(prop)) { }",
            "if (obj.contains(prop)) { }",
            "if (obj.exists(prop)) { }"
        ],
        "answer": "if (prop in obj) { }",
        "explanation": "The 'in' operator returns true if the specified property is in the specified object or its prototype chain."
    },
    {
        "question_en": "Which expression correctly uses the typeof operator?",
        "question_ja": "typeof演算子を正しく使用している式は？",
        "choices": [
            "typeof(value)",
            "typeOf value",
            "typeof value",
            "value.typeof"
        ],
        "answer": "typeof value",
        "explanation": "The typeof operator returns a string indicating the type of the unevaluated operand. The parentheses version also works but is not required."
    },
    {
        "question_en": "What is the correct syntax for the optional chaining operator?",
        "question_ja": "オプショナルチェイニング演算子の正しい構文は？",
        "choices": [
            "user?address?.street",
            "user?.address?.street",
            "user::address::street",
            "user->address->street"
        ],
        "answer": "user?.address?.street",
        "explanation": "The optional chaining (?.) operator accesses an object's property or calls a function. If the object is undefined or null, it returns undefined instead of throwing an error."
    },
    {
        "question_en": "What is the correct syntax for the exponentiation operator?",
        "question_ja": "べき乗演算子の正しい構文は？",
        "choices": [
            "let squared = Math.pow(x, 2);",
            "let squared = x ^ 2;",
            "let squared = x ** 2;",
            "let squared = x^2;"
        ],
        "answer": "let squared = x ** 2;",
        "explanation": "The exponentiation operator (**) raises the first operand to the power of the second operand. It was introduced in ECMAScript 2016."
    },
    {
        "question_en": "What is the correct syntax for the destructuring assignment with arrays?",
        "question_ja": "配列の分割代入の正しい構文は？",
        "choices": [
            "let {a, b} = [1, 2];",
            "let [a, b] = [1, 2];",
            "let a, b = array[0], array[1];",
            "let (a, b) = [1, 2];"
        ],
        "answer": "let [a, b] = [1, 2];",
        "explanation": "Array destructuring assignment uses square brackets on the left-hand side of the assignment to extract values from arrays into distinct variables."
    },
    {
        "question_en": "What is the correct syntax for the conditional (ternary) operator?",
        "question_ja": "条件（三項）演算子の正しい構文は？",
        "choices": [
            "result = if (condition) value1 else value2;",
            "result = condition ? value1 : value2;",
            "result = condition ? value1 | value2;",
            "result = condition then value1 else value2;"
        ],
        "answer": "result = condition ? value1 : value2;",
        "explanation": "The conditional (ternary) operator is the only JavaScript operator that takes three operands: a condition followed by a question mark (?), then an expression if the condition is truthy, followed by a colon (:), and finally the expression if the condition is falsy."
    },
    {
        "question_en": "Which method is used to execute a function repeatedly at fixed time intervals?",
        "question_ja": "一定の時間間隔で関数を繰り返し実行するメソッドは？",
        "choices": [
            "setInterval(function, 1000)",
            "setTimer(function, 1000)",
            "repeatFunction(function, 1000)",
            "repeat(function, 1000)"
        ],
        "answer": "setInterval(function, 1000)",
        "explanation": "The setInterval() method calls a function at specified intervals (in milliseconds)."
    },
    {
        "question_en": "Which method converts a string to an integer?",
        "question_ja": "文字列を整数に変換するメソッドは？",
        "choices": [
            "Integer.parse(\"42\")",
            "parseInteger(\"42\")",
            "parseInt(\"42\")",
            "Number.toInt(\"42\")"
        ],
        "answer": "parseInt(\"42\")",
        "explanation": "The parseInt() function parses a string and returns an integer."
    },
    {
        "question_en": "What is the correct syntax for an arrow function with a single parameter?",
        "question_ja": "単一パラメータのアロー関数の正しい構文は？",
        "choices": [
            "param => { return param * 2; }",
            "(param) => { return param * 2; }",
            "param -> { return param * 2; }",
            "function(param) => { return param * 2; }"
        ],
        "answer": "param => { return param * 2; }",
        "explanation": "For arrow functions with a single parameter, the parentheses are optional. Multiple parameters would require parentheses."
    },
    {
        "question_en": "What is the implicit return syntax for arrow functions?",
        "question_ja": "アロー関数の暗黙的なreturn構文は？",
        "choices": [
            "param => { param * 2 }",
            "param => param * 2",
            "param => return param * 2",
            "param => (return param * 2)"
        ],
        "answer": "param => param * 2",
        "explanation": "Arrow functions without curly braces have an implicit return, eliminating the need for the return keyword."
    },
    {
        "question_en": "What is the correct syntax for the slice method to extract part of an array?",
        "question_ja": "配列の一部を抽出するsliceメソッドの正しい構文は？",
        "choices": [
            "array.slice(1, 3)",
            "array.splice(1, 3)",
            "array.extract(1, 3)",
            "array.subset(1, 3)"
        ],
        "answer": "array.slice(1, 3)",
        "explanation": "The slice() method extracts a section of an array and returns a new array. The first parameter is the start index and the second is the end index (not included)."
    },
    {
        "question_en": "Which method modifies an array by removing and/or adding elements?",
        "question_ja": "要素の削除や追加によって配列を変更するメソッドは？",
        "choices": [
            "array.modify(1, 2, 'new')",
            "array.splice(1, 2, 'new')",
            "array.replace(1, 2, 'new')",
            "array.change(1, 2, 'new')"
        ],
        "answer": "array.splice(1, 2, 'new')",
        "explanation": "The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements. The first parameter is the start index, the second is the number of elements to remove, and additional parameters are elements to add."
    },
    {
        "question_en": "What is the correct method to filter elements in an array?",
        "question_ja": "配列の要素をフィルタリングする正しいメソッドは？",
        "choices": [
            "array.filter(item => item > 10)",
            "array.filterOut(item => item > 10)",
            "array.select(item => item > 10)",
            "array.where(item => item > 10)"
        ],
        "answer": "array.filter(item => item > 10)",
        "explanation": "The filter() method creates a new array with all elements that pass the test implemented by the provided function."
    },
    {
        "question_en": "What is the correct method to transform each element in an array?",
        "question_ja": "配列の各要素を変換する正しいメソッドは？",
        "choices": [
            "array.transform(item => item * 2)",
            "array.map(item => item * 2)",
            "array.forEach(item => item * 2)",
            "array.convert(item => item * 2)"
        ],
        "answer": "array.map(item => item * 2)",
        "explanation": "The map() method creates a new array with the results of calling a provided function on every element in the calling array."
    },
    {
        "question_en": "What is the correct syntax for template literals in JavaScript?",
        "question_ja": "JavaScriptのテンプレートリテラルの正しい構文は？",
        "choices": [
            "'Hello, ' + name + '!'",
            "\"Hello, ${name}!\"",
            "`Hello, ${name}!`",
            "Hello, %{name}!"
        ],
        "answer": "`Hello, ${name}!`",
        "explanation": "Template literals are string literals that allow embedded expressions and multi-line strings. They are enclosed by backtick (`) characters instead of double or single quotes."
    },
    {
        "question_en": "What is the correct way to define default parameter values in a function?",
        "question_ja": "関数でデフォルトのパラメータ値を定義する正しい方法は？",
        "choices": [
            "function(a, b = 2) { return a * b; }",
            "function(a, b:2) { return a * b; }",
            "function(a, b || 2) { return a * b; }",
            "function(a, default b = 2) { return a * b; }"
        ],
        "answer": "function(a, b = 2) { return a * b; }",
        "explanation": "Default function parameters allow named parameters to be initialized with default values if no value or undefined is passed."
    },
    {
        "question_en": "What is the correct method to find an element in an array?",
        "question_ja": "配列内の要素を検索する正しいメソッドは？",
        "choices": [
            "array.search(item => item.id === 3)",
            "array.find(item => item.id === 3)",
            "array.lookup(item => item.id === 3)",
            "array.locate(item => item.id === 3)"
        ],
        "answer": "array.find(item => item.id === 3)",
        "explanation": "The find() method returns the value of the first element in the provided array that satisfies the provided testing function."
    },
    {
        "question_en": "What is the correct method to check if at least one element in an array satisfies a condition?",
        "question_ja": "配列内の少なくとも1つの要素が条件を満たすかを確認する正しいメソッドは？",
        "choices": [
            "array.hasAny(item => item > 10)",
            "array.any(item => item > 10)",
            "array.some(item => item > 10)",
            "array.contains(item => item > 10)"
        ],
        "answer": "array.some(item => item > 10)",
        "explanation": "The some() method tests whether at least one element in the array passes the test implemented by the provided function."
    }
]